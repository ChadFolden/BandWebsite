@using System.Text.Json
@inject HttpClient HttpClient


<section id="videosX" class="section">
    <h2>Videos</h2>
    <div id="carouselVideos" class="carousel slide">
        <!-- Indicators -->
        <div class="carousel-indicators">
            @for (int i = 0; i <= AllVideos.Count; i++)
            {
                <button type="button" data-bs-target="#carouselVideos" data-bs-slide-to="@i" class="bg-dark @(i == 0 ? "active ria-current='true''" : "")" aria-label="Slide @i"></button>
            }
        </div>
        <!-- Items -->
        <div class="carousel-inner">
            @for (int i = 0; i < AllVideos.Count; i++)
            {
                <div class="carousel-item @(i == 0 ? "active" : "") flex justify-center items-center w-full">
                    <iframe src="@AllVideos[i].Url"  scrolling="no" allowfullscreen="allowfullscreen" alt="Father Bacon and the Sizzle Video"></iframe>
                </div>
            }

            <div class="carousel-item text-center align-middle">
                <a href="https://www.facebook.com/FatherBaconSizzle/videos" class="SectionContent">See more videos on our facebook page</a>
            </div>
        </div>
    </div>
</section>




@code {
    private List<Video>? AllVideos { get; set; } = new List<Video>();

    protected override async Task OnInitializedAsync()
    {
        var response = await HttpClient.GetAsync("configs/VideosConfig.json");
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            var config = JsonSerializer.Deserialize<VideosConfig>(json, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });
            AllVideos = config?.Videos;
        }
        else
        {
            AllVideos = new List<Video>(); // or set default values
        }
    }

    public class VideosConfig
    {
        public List<Video> Videos { get; set; } = new();
    }

    public class Video
    {
        public string Url { get; set; } = string.Empty;
    }
}
